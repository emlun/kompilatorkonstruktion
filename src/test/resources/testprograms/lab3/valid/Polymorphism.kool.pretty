object Polymorphism /* Polymorphism#0 */ {
  def main() : Unit = {
    println( ("Polymorphism and Reference test suite " + new PolymorphismTest/**/().run/**/ (  )) );
  }
}

class PolymorphismTest /* PolymorphismTest#1 */ {
  def run /* run#4 */ (  ) : String = {
    var shape /* shape#2 */ /* shape#2 */ : Shape/**/;
    var unit /* unit#3 */ /* unit#3 */ : Int;
    shape/**/ = new Shape/**/().init/**/ ( "blue" );
    unit/**/ = this/**/.displayShape/**/ ( shape/**/ );
    shape/**/ = new Rectangle/**/().initRectangle/**/ ( "red", 2, 4 );
    unit/**/ = this/**/.displayShape/**/ ( shape/**/ );
    shape/**/ = new Square/**/().initSquare/**/ ( "yellow", 2 );
    unit/**/ = this/**/.displayShape/**/ ( shape/**/ );
    shape/**/ = new Circle/**/().init/**/ ( "green" );
    unit/**/ = this/**/.displayShape/**/ ( shape/**/ );
    println( "---------------------" );
    unit/**/ = new Circle/**/().initCircle/**/ ( "" ).drawTwice/**/ (  );
    println( "---------------------" );
    unit/**/ = new ReferenceTest/**/().run/**/ (  );
    return "done";
  }

  def displayShape /* displayShape#7 */ ( shape /* shape#6 */ : Shape/**/ ) : Int = {
    var text /* text#5 */ /* text#5 */ : String;
    text/**/ = ("I am a " + shape/**/.getColor/**/ (  ));
    text/**/ = (text/**/ + " ");
    text/**/ = (text/**/ + shape/**/.getName/**/ (  ));
    println( text/**/ );
    return shape/**/.draw/**/ (  );
  }
}

class ReferenceTest /* ReferenceTest#8 */ {
  def run /* run#20 */ (  ) : Int = {
    var unit /* unit#9 */ /* unit#9 */ : Int;
    var bool1 /* bool1#10 */ /* bool1#10 */ : Bool;
    var bool2 /* bool2#11 */ /* bool2#11 */ : Bool;
    var int1 /* int1#12 */ /* int1#12 */ : Int;
    var int2 /* int2#13 */ /* int2#13 */ : Int;
    var intArr1 /* intArr1#14 */ /* intArr1#14 */ : Int[ ];
    var intArr2 /* intArr2#15 */ /* intArr2#15 */ : Int[ ];
    var string1 /* string1#16 */ /* string1#16 */ : String;
    var string2 /* string2#17 */ /* string2#17 */ : String;
    var shape1 /* shape1#18 */ /* shape1#18 */ : Shape/**/;
    var shape2 /* shape2#19 */ /* shape2#19 */ : Shape/**/;
    bool1/**/ = true;
    bool2/**/ = false;
    unit/**/ = this/**/.swapBool/**/ ( bool1/**/, bool2/**/ );
    if ( bool1/**/ )
      println( "bool1: true" );
    else
      println( "bool1: false" );
    if ( bool2/**/ )
      println( "bool2: true" );
    else
      println( "bool2: false" );
    int1/**/ = 1;
    int2/**/ = 2;
    unit/**/ = this/**/.swapInt/**/ ( int1/**/, int2/**/ );
    println( ("int1: " + int1/**/) );
    println( ("int2: " + int2/**/) );
    intArr1/**/ = new Int [ 1 ];
    intArr2/**/ = new Int [ 2 ];
    unit/**/ = this/**/.swapIntArr/**/ ( intArr1/**/, intArr2/**/ );
    println( ("intArr1: " + intArr1/**/.length) );
    println( ("intArr2: " + intArr2/**/.length) );
    intArr1/**/[ 0 ] = 1;
    intArr2/**/[ 0 ] = 2;
    unit/**/ = this/**/.swapIntArrValue/**/ ( intArr1/**/, intArr2/**/ );
    println( ("intArr1val: " + intArr1/**/ [ 0 ]) );
    println( ("intArr2val: " + intArr2/**/ [ 0 ]) );
    string1/**/ = "1";
    string2/**/ = "2";
    unit/**/ = this/**/.swapString/**/ ( string1/**/, string2/**/ );
    println( ("string1: " + string1/**/) );
    println( ("string2: " + string2/**/) );
    unit/**/ = this/**/.concatStringValue/**/ ( string1/**/, string2/**/ );
    println( ("string1val: " + string1/**/) );
    println( ("string2val: " + string2/**/) );
    shape1/**/ = new Shape/**/().init/**/ ( "1" );
    shape2/**/ = new Shape/**/().init/**/ ( "2" );
    unit/**/ = this/**/.swapShape/**/ ( shape1/**/, shape2/**/ );
    println( ("shape1: " + shape1/**/.getColor/**/ (  )) );
    println( ("shape2: " + shape2/**/.getColor/**/ (  )) );
    unit/**/ = this/**/.resetShape/**/ ( shape1/**/, shape2/**/ );
    println( ("shape1new: " + shape1/**/.getColor/**/ (  )) );
    println( ("shape2set: " + shape2/**/.getColor/**/ (  )) );
    return 0;
  }

  def swapBool /* swapBool#24 */ ( n1 /* n1#22 */ : Bool, n2 /* n2#23 */ : Bool ) : Int = {
    var temp /* temp#21 */ /* temp#21 */ : Bool;
    temp/**/ = n1/**/;
    n1/**/ = n2/**/;
    n2/**/ = temp/**/;
    return 0;
  }

  def swapInt /* swapInt#28 */ ( n1 /* n1#26 */ : Int, n2 /* n2#27 */ : Int ) : Int = {
    var temp /* temp#25 */ /* temp#25 */ : Int;
    temp/**/ = n1/**/;
    n1/**/ = n2/**/;
    n2/**/ = temp/**/;
    return 0;
  }

  def swapIntArr /* swapIntArr#32 */ ( n1 /* n1#30 */ : Int[ ], n2 /* n2#31 */ : Int[ ] ) : Int = {
    var temp /* temp#29 */ /* temp#29 */ : Int[ ];
    temp/**/ = n1/**/;
    n1/**/ = n2/**/;
    n2/**/ = temp/**/;
    return 0;
  }

  def swapIntArrValue /* swapIntArrValue#36 */ ( n1 /* n1#34 */ : Int[ ], n2 /* n2#35 */ : Int[ ] ) : Int = {
    var temp /* temp#33 */ /* temp#33 */ : Int;
    temp/**/ = n1/**/ [ 0 ];
    n1/**/[ 0 ] = n2/**/ [ 0 ];
    n2/**/[ 0 ] = temp/**/;
    return 0;
  }

  def swapString /* swapString#40 */ ( n1 /* n1#38 */ : String, n2 /* n2#39 */ : String ) : Int = {
    var temp /* temp#37 */ /* temp#37 */ : String;
    temp/**/ = n1/**/;
    n1/**/ = n2/**/;
    n2/**/ = temp/**/;
    return 0;
  }

  def concatStringValue /* concatStringValue#43 */ ( n1 /* n1#41 */ : String, n2 /* n2#42 */ : String ) : Int = {
    n1/**/ = (n1/**/ + n2/**/);
    return 0;
  }

  def swapShape /* swapShape#47 */ ( n1 /* n1#45 */ : Shape/**/, n2 /* n2#46 */ : Shape/**/ ) : Int = {
    var temp /* temp#44 */ /* temp#44 */ : Shape/**/;
    temp/**/ = n1/**/;
    n1/**/ = n2/**/;
    n2/**/ = temp/**/;
    return 0;
  }

  def resetShape /* resetShape#51 */ ( n1 /* n1#49 */ : Shape/**/, n2 /* n2#50 */ : Shape/**/ ) : Int = {
    var unit /* unit#48 */ /* unit#48 */ : Int;
    n1/**/ = new Shape/**/().init/**/ ( "3" );
    unit/**/ = n2/**/.setColor/**/ ( "3" );
    return 0;
  }
}

class Shape /* Shape#53 */ {
  var color /* color#52 */ /* color#52 */ : String;
  def init /* init#55 */ ( col /* col#54 */ : String ) : Shape/**/ = {
    color/**/ = col/**/;
    return this/**/;
  }

  def getName /* getName#56 */ (  ) : String = {
    return "shape";
  }

  def draw /* draw#57 */ (  ) : Int = {
    println( "~" );
    return 0;
  }

  def getColor /* getColor#58 */ (  ) : String = {
    return color/**/;
  }

  def setColor /* setColor#60 */ ( col /* col#59 */ : String ) : Int = {
    color/**/ = col/**/;
    return 0;
  }
}

class Rectangle /* Rectangle#63 */ extends Shape/**/ {
  var x /* x#61 */ /* x#61 */ : Int;
  var y /* y#62 */ /* y#62 */ : Int;
  def initRectangle /* initRectangle#68 */ ( c /* c#65 */ : String, a /* a#66 */ : Int, b /* b#67 */ : Int ) : Rectangle/**/ = {
    var unit /* unit#64 */ /* unit#64 */ : Shape/**/;
    x/**/ = a/**/;
    y/**/ = b/**/;
    unit/**/ = this/**/.init/**/ ( c/**/ );
    return this/**/;
  }

  def getName /* getName#69 */ (  ) : String = {
    return "rectangle";
  }

  def draw /* draw#73 */ (  ) : Int = {
    var first /* first#70 */ /* first#70 */ : String;
    var second /* second#71 */ /* second#71 */ : String;
    var i /* i#72 */ /* i#72 */ : Int;
    i/**/ = 0;
    first/**/ = " ";
    second/**/ = "|";
    while ( (i/**/ < x/**/) )
      {
        first/**/ = (first/**/ + "-");
        second/**/ = (second/**/ + " ");
        i/**/ = (i/**/ + 1);
      }
    second/**/ = (second/**/ + "|");
    println( first/**/ );
    i/**/ = 0;
    while ( (i/**/ < y/**/) )
      {
        println( second/**/ );
        i/**/ = (i/**/ + 1);
      }
    println( first/**/ );
    return 0;
  }
}

class Square /* Square#74 */ extends Rectangle/**/ {
  def initSquare /* initSquare#78 */ ( c /* c#76 */ : String, side /* side#77 */ : Int ) : Square/**/ = {
    var unit /* unit#75 */ /* unit#75 */ : Shape/**/;
    unit/**/ = this/**/.initRectangle/**/ ( c/**/, side/**/, side/**/ );
    return this/**/;
  }

  def getName /* getName#79 */ (  ) : String = {
    return "square";
  }
}

class Circle /* Circle#80 */ extends Shape/**/ {
  def initCircle /* initCircle#83 */ ( c /* c#82 */ : String ) : Circle/**/ = {
    var unit /* unit#81 */ /* unit#81 */ : Shape/**/;
    unit/**/ = this/**/.init/**/ ( c/**/ );
    return this/**/;
  }

  def getName /* getName#84 */ (  ) : String = {
    return "circle";
  }

  def draw /* draw#85 */ (  ) : Int = {
    println( "O" );
    return 0;
  }

  def drawTwice /* drawTwice#86 */ (  ) : Int = {
    return (this/**/.draw/**/ (  ) + this/**/.draw/**/ (  ));
  }
}
