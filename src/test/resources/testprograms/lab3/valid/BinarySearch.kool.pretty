object BinarySearch /* BinarySearch#0 */ {
  def main() : Unit = {
    println( new BS/**/().Start/**/ ( 20 ) );
  }
}

class BS /* BS#3 */ {
  var number /* number#1 */ /* number#1 */ : Int[ ];
  var size /* size#2 */ /* size#2 */ : Int;
  def Start /* Start#7 */ ( sz /* sz#6 */ : Int ) : Int = {
    var aux01 /* aux01#4 */ /* aux01#4 */ : Int;
    var aux02 /* aux02#5 */ /* aux02#5 */ : Int;
    aux01/**/ = this/**/.Init/**/ ( sz/**/ );
    aux02/**/ = this/**/.Print/**/ (  );
    if ( this/**/.Search/**/ ( 8 ) )
      println( 1 );
    else
      println( 0 );
    if ( this/**/.Search/**/ ( 19 ) )
      println( 1 );
    else
      println( 0 );
    if ( this/**/.Search/**/ ( 20 ) )
      println( 1 );
    else
      println( 0 );
    if ( this/**/.Search/**/ ( 21 ) )
      println( 1 );
    else
      println( 0 );
    if ( this/**/.Search/**/ ( 37 ) )
      println( 1 );
    else
      println( 0 );
    if ( this/**/.Search/**/ ( 38 ) )
      println( 1 );
    else
      println( 0 );
    if ( this/**/.Search/**/ ( 39 ) )
      println( 1 );
    else
      println( 0 );
    if ( this/**/.Search/**/ ( 50 ) )
      println( 1 );
    else
      println( 0 );
    return 999;
  }

  def Search /* Search#16 */ ( num /* num#15 */ : Int ) : Bool = {
    var bs01 /* bs01#8 */ /* bs01#8 */ : Bool;
    var right /* right#9 */ /* right#9 */ : Int;
    var left /* left#10 */ /* left#10 */ : Int;
    var var_cont /* var_cont#11 */ /* var_cont#11 */ : Bool;
    var medium /* medium#12 */ /* medium#12 */ : Int;
    var aux01 /* aux01#13 */ /* aux01#13 */ : Int;
    var nt /* nt#14 */ /* nt#14 */ : Int;
    aux01/**/ = 0;
    bs01/**/ = false;
    right/**/ = number/**/.length;
    right/**/ = (right/**/ - 1);
    left/**/ = 0;
    var_cont/**/ = true;
    while ( var_cont/**/ )
      {
        medium/**/ = (left/**/ + right/**/);
        medium/**/ = (medium/**/ / 2);
        aux01/**/ = number/**/ [ medium/**/ ];
        if ( (num/**/ < aux01/**/) )
          right/**/ = (medium/**/ - 1);
        else
          left/**/ = (medium/**/ + 1);
        if ( (aux01/**/ == num/**/) )
          var_cont/**/ = false;
        else
          var_cont/**/ = true;
        if ( (right/**/ < left/**/) )
          var_cont/**/ = false;
        else
          nt/**/ = 0;
      }
    if ( (aux01/**/ == num/**/) )
      bs01/**/ = true;
    else
      bs01/**/ = false;
    return bs01/**/;
  }

  def Print /* Print#18 */ (  ) : Int = {
    var j /* j#17 */ /* j#17 */ : Int;
    j/**/ = 1;
    while ( (j/**/ < size/**/) )
      {
        println( number/**/ [ j/**/ ] );
        j/**/ = (j/**/ + 1);
      }
    println( 99999 );
    return 0;
  }

  def Init /* Init#24 */ ( sz /* sz#23 */ : Int ) : Int = {
    var j /* j#19 */ /* j#19 */ : Int;
    var k /* k#20 */ /* k#20 */ : Int;
    var aux01 /* aux01#21 */ /* aux01#21 */ : Int;
    var aux02 /* aux02#22 */ /* aux02#22 */ : Int;
    size/**/ = sz/**/;
    number/**/ = new Int [ sz/**/ ];
    j/**/ = 1;
    k/**/ = (size/**/ + 1);
    while ( (j/**/ < size/**/) )
      {
        aux01/**/ = (2 * j/**/);
        aux02/**/ = (k/**/ - 3);
        number/**/[ j/**/ ] = (aux01/**/ + aux02/**/);
        j/**/ = (j/**/ + 1);
        k/**/ = (k/**/ - 1);
      }
    return 0;
  }
}
