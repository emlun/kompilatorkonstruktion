object OptimalChange /* OptimalChange#0 */ {
  def main() : Unit = {
    if ( (new OptChange/**/().calculateChange/**/ ( 3547 ) == 0) )
      println( "Nothing left" );
    else
      println( "Error" );
  }
}

class OptChange /* OptChange#1 */ {
  def calculateChange /* calculateChange#7 */ ( num /* num#6 */ : Int ) : Int = {
    var coins /* coins#2 */ /* coins#2 */ : Int[ ];
    var values /* values#3 */ /* values#3 */ : Int[ ];
    var current /* current#4 */ /* current#4 */ : Int;
    var i /* i#5 */ /* i#5 */ : Int;
    coins/**/ = new Int [ 10 ];
    values/**/ = new Int [ coins/**/.length ];
    coins/**/[ 0 ] = 1000;
    coins/**/[ 1 ] = 500;
    coins/**/[ 2 ] = 200;
    coins/**/[ 3 ] = 100;
    coins/**/[ 4 ] = 50;
    coins/**/[ 5 ] = 20;
    coins/**/[ 6 ] = 10;
    coins/**/[ 7 ] = 5;
    coins/**/[ 8 ] = 2;
    coins/**/[ 9 ] = 1;
    current/**/ = num/**/;
    println( (("Received " + num/**/) + ".-") );
    i/**/ = 0;
    while ( (i/**/ < coins/**/.length) )
      {
        values/**/[ i/**/ ] = (current/**/ / coins/**/ [ i/**/ ]);
        current/**/ = (current/**/ - (values/**/ [ i/**/ ] * coins/**/ [ i/**/ ]));
        i/**/ = (i/**/ + 1);
      }
    i/**/ = 0;
    while ( (i/**/ < coins/**/.length) )
      {
        if ( (values/**/ [ i/**/ ] == 1) )
          {
            println( (((values/**/ [ i/**/ ] + " coin/bill of ") + coins/**/ [ i/**/ ]) + ".-") );
          }
        else
          {
            println( (((values/**/ [ i/**/ ] + " coins/bills of ") + coins/**/ [ i/**/ ]) + ".-") );
          }
        i/**/ = (i/**/ + 1);
      }
    return current/**/;
  }
}
